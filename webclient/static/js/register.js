// Generated by CoffeeScript 1.3.3
/*
BEGIN REGISTER & LOGIN STUFF *******************
*/

var typewatch;

$("#overlay").click(function() {
  $(this).css("display", "none");
  return $("fieldset#registration-menu").css("display", "none");
});

$('#login-form').submit(function(e) {
  alert('omfg... in');
  var password, username;
  username = $("#login-username").val();
  password = $("#login-password").val();
  callApi(USER_AUTHENTICATE, {
    username: username,
    password: password
  }, function(data) {
    if (data.exception) {
      showDialog("error", "Login Error", data.exception);
      return;
    }
    if (data.result) {
      $('#header-right').css('visibility','hidden');
      $('#header-right').css('display','none');
	  return;
    }
  });
  return false;
});

$("#register-username").keyup(function(e) {
  var username;
  clearTimeout($.data(this, "timer"));
  if ($("#register-username").val() === 0) {
    $("#register-username-icon").css("visibility", "hidden");
    return;
  }
  username = $(this).val();
  return $(this).data("timer", setTimeout(function() {
    return callApi(USER_USERNAME_EXISTS, {
      username: username
    }, function(data) {
      if (data.exception) {
        showDialog("error", "Registration Error", data.exception);
        return;
      }
      $("#register-username-icon").css("visibility", "visible");
      if (data.result) {
        $("#register-username-icon").attr("class", "ui-icon ui-corner-all ui-icon-closethick data-invalid");
        return $("#register-username-icon").attr("title", "Username exists");
      } else {
        $("#register-username-icon").attr("class", "ui-icon ui-corner-all ui-icon-check data-valid");
        return $("#register-username-icon").attr("title", "Username not in use");
      }
    });
  }, AJAX_KEYPRESS_DELAY));
});

$("#register-email").keyup(function() {
  var email, re;
  clearTimeout($.data(this, "timer"));
  if ($("#register-email").val().length === 0) {
    $("#register-email-icon").css("visibility", "hidden");
    return;
  } else {
    $("#register-email-icon").css("visibility", "visible");
  }
  email = $(this).val();
  re = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
  if (re.test(email)) {
    return callApi(USER_EMAIL_EXISTS, {
      email: email
    }, function(data) {
      if (data.exception) {
        return;
      }
      if (data.result) {
        $("#register-email-icon").attr("class", "ui-icon ui-corner-all ui-icon-closethick data-invalid");
        return $("#register-email-icon").attr("title", "Email has already been registered.");
      } else {
        $("#register-email-icon").attr("class", "ui-icon ui-corner-all ui-icon-check data-valid");
        return $("#register-email-icon").attr("title", "Email has not been registered.");
      }
    });
  } else {
    $("#register-email-icon").attr("class", "ui-icon ui-corner-all ui-icon-closethick data-invalid");
    return $("#register-email-icon").attr("title", "Invalid Email.");
  }
});

$("#registration-form").submit(function(e) {
  var email, password, username;
  username = $("#register-username").val();
  email = $("#register-email").val();
  password = $("#register-password").val();
  callApi(USER_REGISTER, {
    username: username,
    email: email,
    password: password
  }, function(data) {
    if (data.exception) {
      showDialog("error", "Registration Error", data.exception);
      return;
    }
    if (data.result) {
      $("#account-navigation").css("visibility", "visible");
      $("#account-navigation").css("display", "block");
      $("#user-account").html("<a href='user'>&#35; " + username + "</a>");
      $("#bid-info").css("visibility", "visible");
      $("#bid-info").css("display", "block");
      $("#login-container").css("visibility", "hidden");
      $("#login-container").css("display", "none");
      $("#overlay").css("display", "none");
      return $("fieldset#registration-menu").css("display", "none");
    }
  });
  return false;
});

typewatch = (function() {
  var timer;
  timer = 0;
  return function(callback, ms) {
    clearTimeout(timer);
    return timer = setTimeout(callback, ms);
  };
})();

/*
END REGISTER & LOGIN STUFF ******************
*/

