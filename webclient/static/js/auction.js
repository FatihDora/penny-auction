// Generated by CoffeeScript 1.3.3
(function() {
  var auction, sideAuctionIDs, sideAuctionList;

  $(document).ready(function() {
    auction.init();
    return auction.updateInterval = window.setInterval(auction.updateSideAuctions, 1000);
  });

  sideAuctionList = [];

  sideAuctionIDs = [];

  auction = {
    fetchingAuctionUpdates: null,
    init: function() {
      var buildSideAuction, oAuction, updateInterval;
      updateInterval = null;
      oAuction = null;
      callApi(AUCTION_DETAIL, {
        id: auction_id
      }, function(data) {
        var b, i, m, n, p, u, w;
        if (!data.result) {
          return document.location.href = '/';
        } else {
          oAuction = data.result[0];
          i = oAuction.id;
          n = oAuction.name;
          b = oAuction.base_price;
          u = oAuction.product_url;
          m = oAuction.image_url;
          p = oAuction.price;
          w = oAuction.winner;
          oAuction.time_left = secondsToHms(oAuction.time_left);
          $('#auction-name').html(oAuction.name);
          $('#auction-image').html('<img src="' + oAuction.image_url + '" alt="' + oAuction.name + '" width="292" height="242" />');
          $('#current-price').html('P' + oAuction.price);
          $('#current-winner').html(oAuction.winner);
          $('#auction-baseprice').html(oAuction.base_price);
          return $('#auction-time-left').html(oAuction.time_left);
        }
      });
      callApi(AUCTIONS_LIST_CURRENT, {
        count: 4
      }, function(data) {
        var b, i, ix, m, n, p, sideAuctions, t, u, w, _results;
        $("#auctions").html("");
        sideAuctions = data.result;
        _results = [];
        for (ix in sideAuctions) {
          if (String(sideAuctions[ix].id) !== String(auction_id) && sideAuctionIDs.length < 3) {
            i = sideAuctions[ix].id;
            n = sideAuctions[ix].name;
            b = sideAuctions[ix].base_price;
            u = sideAuctions[ix].product_url;
            m = sideAuctions[ix].image_url;
            p = sideAuctions[ix].price;
            w = sideAuctions[ix].winner;
            t = secondsToHms(sideAuctions[ix].time_left);
            sideAuctionIDs.push(i);
            sideAuctionList[i] = sideAuctions[ix];
            _results.push($("#auctions").append(buildSideAuction(i, n, b, u, m, p, w, t)));
          } else {
            _results.push(void 0);
          }
        }
        return _results;
      });
      return buildSideAuction = function(id, productName, basePrice, productUrl, imageUrl, currentPrice, currentWinner, timeTilEnd) {
        var tmplAuction;
        tmplAuction = '';
        tmplAuction += '<li id="{auction-id}">';
        tmplAuction += '\t<div class="top-block">';
        tmplAuction += '\t\t<div class="product-name"><a title="{item-name}" href="/auction/{auction-id}">{item-name}</a></div>';
        tmplAuction += '\t\t<div class="thumbnail-zoom-small">';
        tmplAuction += '\t\t\t<a class="fadeable" href="/auction/{auction-id}">';
        tmplAuction += '\t\t\t\t<img alt="{item-name}" src="{image-url}">';
        tmplAuction += '\t\t\t</a>';
        tmplAuction += '\t\t</div>';
        tmplAuction += '\t\t<div class="winner"><a href="#">{winner}</a></div>';
        tmplAuction += '\t\t<div class="price red">P {current-price}</div>';
        tmplAuction += '\t\t<div class="time-left">{time-remaining}</div>';
        tmplAuction += '\t</div>';
        tmplAuction += '\t<div class="bid"><a href="javascript:void(0);" class="button-default cart"><span class="hover">LOADING...</span><span>LOADING...</span></a></div>';
        tmplAuction += '</li>';
        tmplAuction = tmplAuction.replaceAll("{auction-id}", id);
        tmplAuction = tmplAuction.replaceAll("{item-name}", productName);
        tmplAuction = tmplAuction.replaceAll("{image-url}", imageUrl);
        tmplAuction = tmplAuction.replaceAll("{current-price}", currentPrice);
        tmplAuction = tmplAuction.replaceAll("{winner}", currentWinner);
        tmplAuction = tmplAuction.replaceAll("{time-remaining}", timeTilEnd);
        return tmplAuction;
      };
    },
    updateRecentBids: function() {
      var fetchingAuctionUpdates;
      callApi(AUCTION_RECENT_BIDS, {
        count: 4
      }, function(data) {});
      return fetchingAuctionUpdates = jQuery.ajax({
        url: API + AUCTIONS_STATUS_BY_ID,
        data: {
          ids: sideAuctionIDs.join()
        },
        success: function(data) {
          fetchingAuctionUpdates = null;
          return $.map(data, function(auction) {
            var a, auctions, buttonText, i, ix, p, t, w, _results;
            auctions = data.result;
            sideAuctionList = [];
            _results = [];
            for (ix in auctions) {
              i = auctions[ix].id;
              p = auctions[ix].price;
              w = auctions[ix].winner;
              t = secondsToHms(auctions[ix].time_left);
              a = auctions[ix].active;
              sideAuctionList[i] = auctions[ix];
              buttonText = "";
              if (auctions[ix].time_left > 11.0) {
                buttonText = "Starting Soon...";
              } else {
                if (user.loggedIn != null) {
                  buttonText = "BID NOW!";
                } else {
                  buttonText = "REGISTER NOW!";
                }
              }
              $("#" + i + " div.winner").html("<a href=\"#\">" + w + "</a>");
              $("#" + i + " div.price").text("P " + p);
              $("#" + i + " div.time-left").html(t);
              if (auctions[ix].time_left === 0) {
                if (w === "No Bidder") {
                  buttonText = "SOLD";
                } else {
                  buttonText = "ENDED";
                }
              }
              _results.push($("#" + i + " div.bid").html('<a href="javascript:void(0);" class="button-default cart"><span class="hover">' + buttonText + '</span><span>' + buttonText + '</span></a>'));
            }
            return _results;
          });
        }
      });
    },
    updateSideAuctions: function() {
      var fetchingAuctionUpdates, i, id, tmplist, _i, _len;
      if (sideAuctionIDs.length === 0) {
        return;
      }
      tmplist = [];
      i = 0;
      for (_i = 0, _len = sideAuctionIDs.length; _i < _len; _i++) {
        id = sideAuctionIDs[_i];
        try {
          if (sideAuctionList[id].time_left > 0.0) {
            tmplist.push(id);
          }
        } catch (error) {

        }
        i++;
      }
      sideAuctionIDs = tmplist;
      if (fetchingAuctionUpdates) {
        fetchingAuctionUpdates.abort();
      }
      return fetchingAuctionUpdates = jQuery.ajax({
        url: API + AUCTIONS_STATUS_BY_ID,
        data: {
          ids: sideAuctionIDs.join()
        },
        success: function(data) {
          fetchingAuctionUpdates = null;
          return $.map(data, function(auction) {
            var a, auctions, buttonText, ix, p, t, w, _results;
            auctions = data.result;
            sideAuctionList = [];
            _results = [];
            for (ix in auctions) {
              i = auctions[ix].id;
              p = auctions[ix].price;
              w = auctions[ix].winner;
              t = secondsToHms(auctions[ix].time_left);
              a = auctions[ix].active;
              sideAuctionList[i] = auctions[ix];
              buttonText = "";
              if (auctions[ix].time_left > 11.0) {
                buttonText = "Starting Soon...";
              } else {
                if (user.loggedIn != null) {
                  buttonText = "BID NOW!";
                } else {
                  buttonText = "REGISTER NOW!";
                }
              }
              $("#" + i + " div.winner").html("<a href=\"#\">" + w + "</a>");
              $("#" + i + " div.price").text("P " + p);
              $("#" + i + " div.time-left").html(t);
              if (auctions[ix].time_left === 0) {
                if (w === "No Bidder") {
                  buttonText = "SOLD";
                } else {
                  buttonText = "ENDED";
                }
              }
              _results.push($("#" + i + " div.bid").html('<a href="javascript:void(0);" class="button-default cart"><span class="hover">' + buttonText + '</span><span>' + buttonText + '</span></a>'));
            }
            return _results;
          });
        }
      });
    }
  };

  $("#createautobidder-form").submit(function(e) {
    var email, error, first_name, last_name, password, termsaccepted, username;
    e.preventDefault();
    error = "<ul style='clear: both'>";
    first_name = $("#FirstName").val();
    last_name = $("#LastName").val();
    username = $("#Username").val();
    email = $("#Email").val();
    password = $("#Password").val();
    termsaccepted = $("#termsandconditions:checked").val();
    if (first_name.length === 0) {
      error += "<li>A First Name is required.<li/>";
    }
    if (last_name.length === 0) {
      error += "<li>A Last Name is required.<li/>";
    }
    if (username.length === 0) {
      error += "<li>A username is required.<li/>";
    }
    if (email.length === 0) {
      error += "<li>An email address is required.<li/>";
    }
    if (password.length === 0) {
      error += "<li>A password is required.<li/>";
    }
    if (!termsaccepted) {
      error += "<li>You must accept our terms and conditions to register an account.<li/>";
    }
    error += "</ul>";
    if (error !== "<ul style='clear: both'></ul>") {
      showDialog("error", "Registration Error", error);
      return false;
    }
    callApi(USER_REGISTER, {
      first_name: first_name,
      last_name: last_name,
      username: username,
      email: email,
      password: password
    }, function(data) {
      if (data.exception) {
        showDialog("error", "Registration Error", data.exception);
        return;
      }
      if (data.result) {
        $("div#registration-form").slideUp('slow', function() {
          $("div#registration-complete strong").text(email);
          return $("div#registration-complete").fadeIn(1000);
        });
      }
    });
    return false;
  });

}).call(this);
